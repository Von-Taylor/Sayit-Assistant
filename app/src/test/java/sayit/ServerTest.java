/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sayit;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;

import org.junit.jupiter.api.Test;

import sayit.Server.Server;
import sayit.Server.BusinessLogic.Prompt;
import sayit.Server.BusinessLogic.PromptHistory;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import java.util.ArrayList;

public class ServerTest {
    private PromptHistory myHistory;
    private final String FILE_EMPTY_PATH = "src/test/java/sayit/Test-files/empty.txt";
    private final String URL = "http://localhost:8100/";

    @BeforeEach
    void setup() throws IOException {
        myHistory = new PromptHistory();
        myHistory.setupPromptHistory(FILE_EMPTY_PATH);
        Server.startServer();
    }

    @AfterEach
    void closeServer() throws IOException {
        Server.stopServer();
    }

    @Test
    void postAndGetTest() throws IOException {
        // add 2 prompts locally and to server
        Prompt p1 = new Prompt("Is the ocean a soup?", "Whatever makes you happy.");
        Prompt p2 = new Prompt("What's red and bad for your teeth?", "A brick.");
        myHistory.addPrompt(p1);
        myHistory.addPrompt(p2);

        // get the prompt at first index on the server
        URL url = new URL(URL + "?=" + 0);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        BufferedReader in = new BufferedReader(
            new InputStreamReader(conn.getInputStream())
        );
        String response = in.readLine();
        in.close();
        String question = response.substring(0,response.indexOf("/D\\"));
        String answer = response.substring(response.indexOf("/D\\") + 3);

        // compare it to question and answer of local prompts
        assertEquals(myHistory.getQuery(0), question);
        assertEquals(myHistory.getAnswer(0), answer);

        // get the prompt at second index on the server
        url = new URL(URL + "?=" + 1);
        conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        in = new BufferedReader(
            new InputStreamReader(conn.getInputStream())
        );
        response = in.readLine();
        in.close();
        question = response.substring(0,response.indexOf("/D\\"));
        answer = response.substring(response.indexOf("/D\\") + 3);

        // compare it to question and answer of local prompts
        assertEquals(myHistory.getQuery(1), question);
        assertEquals(myHistory.getAnswer(1), answer);
    }

    @Test
    void deleteSelectedTest() throws IOException {
        // add 2 prompts locally and to server
        Prompt p1 = new Prompt("Is the ocean a soup?", "Whatever makes you happy.");
        Prompt p2 = new Prompt("What's red and bad for your teeth?", "A brick.");
        myHistory.addPrompt(p1);
        myHistory.addPrompt(p2);

        // delete p1 locally and on server
        myHistory.removePrompt(p1);

        // check first element is p2 now
        URL url = new URL(URL + "?=" + 0);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        BufferedReader in = new BufferedReader(
            new InputStreamReader(conn.getInputStream())
        );
        String response = in.readLine();
        in.close();
        String question = response.substring(0,response.indexOf("/D\\"));
        String answer = response.substring(response.indexOf("/D\\") + 3);

        // compare first element on server prompts to local
        assertEquals(myHistory.getQuery(0), question);
        assertEquals(myHistory.getAnswer(0), answer);

        // get the 2nd prompt in prompts on the server (should be null = -1 after deletion)
        url = new URL(URL + "?=" + 1);
        conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        in = new BufferedReader(
            new InputStreamReader(conn.getInputStream())
        );
        response = in.readLine();
        in.close();

        // check that the 2nd element does not exist
        assertEquals("-1", response);
    }

    @Test
    void clearAllTest() throws IOException {
        // add 2 prompts locally and to server
        Prompt p1 = new Prompt("Is the ocean a soup?", "Whatever makes you happy.");
        Prompt p2 = new Prompt("What's red and bad for your teeth?", "A brick.");
        myHistory.addPrompt(p1);
        myHistory.addPrompt(p2);

        // clear all prompts locally and on server
        myHistory.clearPrompts();

        // check first element is p2 now
        URL url = new URL(URL + "?=" + 0);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        BufferedReader in = new BufferedReader(
            new InputStreamReader(conn.getInputStream())
        );
        String response = in.readLine();
        in.close();

        // check that the 1st element does not exist (prompts is empty)
        assertEquals("-1", response);
    }
}
